services:
  database:
    container_name: meraki-database
    restart: unless-stopped
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./database/db_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d/:ro
    networks:
      - localdev-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: meraki-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3000:3000"
    command: sh -c "npm run build && node dist/index.js"
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    networks:
      - localdev-network

  frontend:
    container_name: meraki-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - "5173:5173"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    networks:
      - localdev-network

  contentmanager:
    container_name: meraki-contentmanager
    build:
      context: ./contentmanager
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    networks:
      - localdev-network

networks:
  localdev-network:
    driver: bridge
